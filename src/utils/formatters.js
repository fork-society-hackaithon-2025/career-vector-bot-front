import { format, formatDistanceToNow } from 'date-fns'
import { ru } from 'date-fns/locale'

// –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞—Ç—ã
export const formatDate = (dateString) => {
  if (!dateString) return '-'
  
  try {
    const date = new Date(dateString)
    return format(date, 'dd.MM.yyyy HH:mm', { locale: ru })
  } catch (error) {
    return dateString
  }
}

// –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏
export const formatRelativeTime = (dateString) => {
  if (!dateString) return '-'
  
  try {
    const date = new Date(dateString)
    return formatDistanceToNow(date, { addSuffix: true, locale: ru })
  } catch (error) {
    return dateString
  }
}

// –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∞–ª–ª–æ–≤
export const formatScore = (score, maxScore) => {
  if (typeof score !== 'number' || typeof maxScore !== 'number') {
    return '-'
  }
  return `${score}/${maxScore}`
}

// –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—Ü–µ–Ω—Ç–æ–≤
export const formatPercentage = (value, decimals = 1) => {
  if (typeof value !== 'number') return '-'
  return `${value.toFixed(decimals)}%`
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–ª–∞—Å—Å–∞ CSS –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –±–∞–ª–ª–æ–≤
export const getCategoryClass = (category) => {
  switch (category) {
    case '0-24':
      return 'badge badge-success' // –õ—É—á—à–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è
    case '25-49':
      return 'badge badge-info'
    case '50-73':
      return 'badge badge-warning'
    case '74-98':
      return 'badge badge-error' // –•—É–¥—à–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è
    default:
      return 'badge'
  }
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ –æ–ø–∏—Å–∞–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
export const getCategoryDescription = (category) => {
  switch (category) {
    case '0-24':
      return '–í—ã—Å–æ–∫–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ø—Ä–æ—Ñ–∏–ª—é —Å–æ—Ü–∏–∞–ª—å–Ω–æ–≥–æ –ª–∏–¥–µ—Ä–∞'
    case '25-49':
      return '–°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ø—Ä–æ—Ñ–∏–ª—é —Å–æ—Ü–∏–∞–ª—å–Ω–æ–≥–æ –ª–∏–¥–µ—Ä–∞'
    case '50-73':
      return '–ó–∞–º–µ—Ç–Ω–æ —Ä–∞–∑–Ω—è—â–∏–π—Å—è —Å –ø—Ä–æ—Ñ–∏–ª–µ–º —Å–æ—Ü–∏–∞–ª—å–Ω–æ–≥–æ –ª–∏–¥–µ—Ä–∞'
    case '74-98':
      return '–ù–ï —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ø—Ä–æ—Ñ–∏–ª—é —Å–æ—Ü–∏–∞–ª—å–Ω–æ–≥–æ –ª–∏–¥–µ—Ä–∞'
    default:
      return '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è'
  }
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ —Ü–≤–µ—Ç–∞ –¥–ª—è –≥—Ä–∞—Ñ–∏–∫–æ–≤
export const getCategoryColor = (category) => {
  switch (category) {
    case '0-24':
      return '#10b981' // green-500
    case '25-49':
      return '#3b82f6' // blue-500
    case '50-73':
      return '#f59e0b' // amber-500
    case '74-98':
      return '#ef4444' // red-500
    default:
      return '#6b7280' // gray-500
  }
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ—Ä–æ—Ç–∫–æ–≥–æ –æ–ø–∏—Å–∞–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è –ª–µ–≥–µ–Ω–¥—ã
export const getCategoryLabel = (category) => {
  switch (category) {
    case '0-24':
      return '–í—ã—Å–æ–∫–æ–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ'
    case '25-49':
      return '–ß–∞—Å—Ç–∏—á–Ω–æ–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ'
    case '50-73':
      return '–ó–∞–º–µ—Ç–Ω–æ–µ —Ä–∞–∑–ª–∏—á–∏–µ'
    case '74-98':
      return '–ù–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç'
    default:
      return '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è'
  }
}

// –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
export const formatUserName = (user) => {
  if (user.username) {
    return `@${user.username}`
  }
  return `ID: ${user.telegram_id}`
}

// –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞
export const getStatusInfo = (isCompleted, choicesCount = 0) => {
  if (isCompleted) {
    return {
      text: '–ó–∞–≤–µ—Ä—à–µ–Ω',
      icon: '‚úÖ',
      class: 'text-green-600 dark:text-green-400'
    }
  }
  
  if (choicesCount > 0) {
    return {
      text: '–í –ø—Ä–æ—Ü–µ—Å—Å–µ',
      icon: 'üîÑ',
      class: 'text-yellow-600 dark:text-yellow-400'
    }
  }
  
  return {
    text: '–ù–µ –Ω–∞—á–∞—Ç',
    icon: '‚è≥',
    class: 'text-gray-600 dark:text-gray-400'
  }
}


